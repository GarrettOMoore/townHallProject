{
  "rules": {
     ".write": "false",
     "townHalls" : {
      ".indexOn": "lastUpdated",
      ".read": "true",
      ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true",
      "$townHallID": {
        ".read": "true",
        ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true || root.child('users').child(auth.uid).child('isVerifier').val() == true",
      	"lastUpdated": {
            ".indexOn": ".value"
      		}
        }
     },
      "capEvents" : {
      ".indexOn": "lastUpdated",
      ".read": "true",
      ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true",
      "$townHallID": {
        ".read": "true",
        ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true || root.child('users').child(auth.uid).child('isVerifier').val() == true",
      	"lastUpdated": {
            ".indexOn": ".value"
      		}
        }
     },
  	"townHallIds" : {
      ".read": "true",
      ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true",
      "$townHallID": {
       ".validate": "newData.hasChildren(['eventId','lastUpdated'])"
     }
   },
    "townHallsOld" : {
      ".read": "true",
      ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true",
        "$month" : {
        ".indexOn": "dateObj",
          "$townHallID": {
           ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true",
						"dateObj":{
              ".indexOn": ".value"
            },
           "meetingType": {
              ".indexOn": ".value"
            }
     		}
     }
   },
    "UserSubmission" : {
      ".read": "true",
      ".write": "auth.uid !== null",
      "$townHallID": {
       ".validate": "newData.hasChildren(['Member','eventId'])"
     }
   },
    "MOCs" : {
      ".read": "true",
      "$mocKey": {
        ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true",
        "currentEvents" : {
          ".write": "auth.uid !== null"
        }
     }
   },
  	"mocData" : {
      ".read": "true",
      "$mocKey": {
        	".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true || root.child('users').child(auth.uid).child('dataIntern').val() == true",
        	"lastUpdatedBy": {
        		".write": "auth.uid !== null"
       		 },
           "lastUpdated": {
        		".write": "auth.uid !== null"
       		 },
        	"currentEvents" : {
          	".write": "auth.uid !== null"
        }
     }
   },
    "mocID" : {
      ".read": "true",
      "$mocKey": {
        ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true"
     }
   },
    "zips": {
      ".read": "true"
    },
   "zipToDistrict": {
      ".read": "true",
        "$zip":{
          ".read": "true",
                    ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true"

        }
    },
   "townHallsErrors" : {
     "$townHallID": {
       ".read": "true",
        ".write": "root.child('users').child(auth.uid).child('isAdmin').val() == true",
        ".validate": "newData.hasChildren(['Member','Party','State'])"
    }
  },
  "geolocate" : {
    ".read": "true",
    "state": {
      "$state": {
        ".write": "auth.uid !== null",
    	 ".validate": "newData.hasChildren(['lat','lng'])"
      	}
   		},
     "street": {
       "$street":{
        ".write": "auth.uid !== null",
   	  		".validate": "newData.hasChildren(['lat','lng'])"
       }
   	}
 },
	"zipZeroResults" : {
         ".read": "false",
    	 		".write": "true",
        	"$zip" : {
           ".read": "false",
    	 			".write": "true",
       	 	  ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 10000"
        }
    	},
  "emailSignUps" : {
         ".read": "false",
    	 		".write": "true",
        	"$user" : {
           ".read": "false",
    	 			".write": "true",
            ".validate": "newData.hasChildren(['person'])"
        }
    	},
  "users": {
      "$user_id": {
        ".read": "$user_id === auth.uid || root.child('users').child(auth.uid).child('isAdmin').val() == true",
        ".write": "$user_id === auth.uid",
      	"mocs" : {
          "$mocID" : {
          	".write": "$user_id === auth.uid || root.child('users').child(auth.uid).child('isAdmin').val() == true"
          }
        }
       }
    }
  }
}
